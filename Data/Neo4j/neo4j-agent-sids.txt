import pymongo
from pymongo import MongoClient
from neo4j import GraphDatabase

#Neo4j connection
#
#
#Define the URI, username, and password for your Neo4j database
uri = "bolt://localhost:7687"
username = "neo4j"
password = "123456789"

# Create a connection to the database
driver = GraphDatabase.driver(uri, auth=(username, password))


# Mongodb Connection
#
#
client = MongoClient("mongodb+srv://ak:cO861EI5Kpfy6k2R@cluster0.jscsiwg.mongodb.net/")
db = client.Spectre
agents = db.agents  

# Function for run()
def run_query(query, para):
    with driver.session() as session:
        result = session.run(query, para)
        return result

# retrieve the data from Mongodb DB
docs = agents.find(projection=projection)
projection = {'acode' : 1, 'secret_identities': 1}

for doc in docs:
    if "secret_identities" in doc:
        for s in doc['secret_identities']:
            query = '''
                MATCH (a:Agent{acode: $acode})
                MERGE (a)-[r:HasSid]->(s:SecretIdentities{
                    sid: $sid,
                    sid_type: $sid_type,
                    sid_nationality: $sid_nationality,
                    sid_other_details: $sid_other_details,
                    sid_status: $sid_status,
                    sid_issue_date: $sid_issue_date,
                    sid_exp_date: $sid_exp_date
                })
                RETURN a, r, s
            '''
            para = {
                'acode': doc['acode'],
                'sid': s['sid'],
                'sid_type': s['sid_type'],
                'sid_nationality': s['sid_nationality'],
                'sid_other_details': s['sid_other_details'],
                'sid_status': s['sid_status'],
                'sid_issue_date': s['sid_issue_date'],
                'sid_exp_date': s['sid_exp_date']
            }


            print(run_query(query,para))

driver.close()
client.close()